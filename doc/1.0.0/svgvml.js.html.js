ne.util.defineNamespace("fedoc.content", {});
fedoc.content["svgvml.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview module for manipulate SVG or VML object\n * @author NHN Ent. FE Development Team &lt;dl_javascript@nhnent.com>\n */\n'use strict';\n\nvar util = global.tui.util;\nvar PARSE_TRANSLATE_NUM_REGEX = /[\\.\\-0-9]+/g;\nvar SVG_HUE_HANDLE_RIGHT_POS = -6;\n\n/* istanbul ignore next */\nvar svgvml = {\n    /**\n     * Return true when browser is below IE8.\n     * @returns {boolean} is old browser?\n     */\n    isOldBrowser: function() {\n        var _isOldBrowser = svgvml._isOldBrowser;\n\n        if (!util.isExisty(_isOldBrowser)) {\n            svgvml._isOldBrowser = _isOldBrowser = util.browser.msie &amp;&amp; util.browser.version &lt; 9;\n        }\n\n        return _isOldBrowser;\n    },\n\n    /**\n     * Get translate transform value\n     * @param {SVG|VML} obj - svg or vml object that want to know translate x, y\n     * @returns {number[]} translated coordinates [x, y]\n     */\n    getTranslateXY: function(obj) {\n        var temp;\n\n        if (svgvml.isOldBrowser()) {\n            temp = obj.style;\n            return [parseFloat(temp.top), parseFloat(temp.left)];\n        }\n\n        temp = obj.getAttribute('transform');\n\n        if (!temp) {\n            return [0, 0];\n        }\n        \n        temp = temp.match(PARSE_TRANSLATE_NUM_REGEX);\n\n        // need caution for difference of VML, SVG coordinates system.\n        // translate command need X coords in first parameter. but VML is use CSS coordinate system(top, left)\n        return [parseFloat(temp[1]), parseFloat(temp[0])];\n    },\n\n    /**\n     * Set translate transform value\n     * @param {SVG|VML} obj - SVG or VML object to setting translate transform.\n     * @param {number} x - translate X value\n     * @param {number} y - translate Y value\n     */\n    setTranslateXY: function(obj, x, y) {\n        if (svgvml.isOldBrowser()) {\n            obj.style.left = x + 'px';\n            obj.style.top = y + 'px';\n        } else {\n            obj.setAttribute('transform', 'translate(' + x + ',' + y + ')');\n        }\n    },\n\n    /**\n     * Set translate only Y value\n     * @param {SVG|VML} obj - SVG or VML object to setting translate transform.\n     * @param {number} y - translate Y value\n     */\n    setTranslateY: function(obj, y) {\n        if (svgvml.isOldBrowser()) {\n            obj.style.top = y + 'px';\n        } else {\n            obj.setAttribute('transform', 'translate(' + SVG_HUE_HANDLE_RIGHT_POS + ',' + y + ')');\n        }\n    },\n\n    /**\n     * Set stroke color to SVG or VML object\n     * @param {SVG|VML} obj - SVG or VML object to setting stroke color\n     * @param {string} colorStr - color string\n     */\n    setStrokeColor: function(obj, colorStr) {\n        if (svgvml.isOldBrowser()) {\n            obj.strokecolor = colorStr;\n        } else {\n            obj.setAttribute('stroke', colorStr);\n        }\n    },\n\n    /**\n     * Set gradient stop color to SVG, VML object.\n     * @param {SVG|VML} obj - SVG, VML object to applying gradient stop color\n     * @param {string} colorStr - color string\n     */\n    setGradientColorStop: function(obj, colorStr) {\n        if (svgvml.isOldBrowser()) {\n            obj.color = colorStr;\n        } else {\n            obj.setAttribute('stop-color', colorStr);\n        }\n    }\n\n};\n\nmodule.exports = svgvml;\n\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"