<?xml version="1.0"?>
<testsuite name="Firefox 43.0.0 (Mac OS X 10.11.0)" package="" timestamp="2016-08-22T03:24:06" id="0" hostname="NHNEnts-MacBook-Pro.local" tests="114" errors="0" failures="0" time="1.227">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:43.0) Gecko/20100101 Firefox/43.0"/>
  </properties>
  <testcase name="isValidRGB() can validate rgb hex string." time="0.006" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).colorutil"/>
  <testcase name="hexToRgb()" time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).colorutil"/>
  <testcase name="rgbToHSV()" time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).colorutil"/>
  <testcase name="hsvToRGB()" time="0.003" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).colorutil"/>
  <testcase name="rgbToHEX()" time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).colorutil"/>
  <testcase name="can customize method that extract ID from item." time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="get ID from item." time="0" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="add item to collection." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="add duplicated model then overwrite it." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="can use multiple arguments item." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="method don't work when collection is empty" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="can't delete other item" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="remove own item." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="can remove multiple item." time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="also accept item itself." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="method don't work when collection is empty" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="remove all of collection items." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="method don't work when collection is empty" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="return true when collection has that object." time="0" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="check item existance by id." time="0" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="can use filter function instead of id." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="return new collection that filled with filtered items." time="0" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="when collection's getItemID customized. then return collection has same func." time="0" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="combind multiple function filter AND clause." time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="combine multiple function filter with OR clause." time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="group all elements by number values." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="group by number property" time="0" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="group by boolean values." time="0" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="if base value is function then use returned value" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="group by custom functions" time="0.017" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="create each collection with keys when array of key values supplied by first arguments." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="no sort when compareFunction not supplied." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="sort own items by given compare function." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="iterate own items." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="break loop when iteratee return false." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="invoke supplied method when collection has model." time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="return single element in collection." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="return new collection with merged supplied collections." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="newly create collection has same getItemIDFn with first argumented collection." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="item with same id did not affect total item counts" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="return new array with collection items." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Collection"/>
  <testcase name="can set context for event handlers" time="0.351" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domevent"/>
  <testcase name="DOM엘리먼트에 이벤트 핸들러를 설정한다" time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domevent"/>
  <testcase name="이벤트명:핸들러 객체로도 설정할 수 있다" time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domevent"/>
  <testcase name="동일 파라미터로 두번 이상 바인딩 불가" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domevent"/>
  <testcase name="브라우저마다 다른 마우스 휠 이벤트의 정규화 기능을 제공한다" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domevent"/>
  <testcase name="DOM에 걸린 이벤트 핸들러를 제거한다" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domevent"/>
  <testcase name="이벤트명:핸들러 객체를 사용해 한번에 여러 핸들러를 해제할 수 있다" time="0.003" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domevent"/>
  <testcase name="등록된 이벤트가 전부 해제되면 관련 프로퍼티를 아예 제거한다." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domevent"/>
  <testcase name="이벤트를 단발성으로 등록할 수 있다" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domevent"/>
  <testcase name="이벤트명:핸들러의 객체로 여러 핸들러를 단발성으로 한번에 등록할 수 있다" time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domevent"/>
  <testcase name="stopPropagation() 으로 이벤트의 버블링을 방지할 수 있다" time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domevent"/>
  <testcase name="getMousePosition()에 컨테이너를 넘기면 특정 엘리먼트 기준의 마우스 위치를 쉽게 계산할 수 있다" time="0.003" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domevent"/>
  <testcase name="can remove element with safely." time="0.342" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="문서 내 엘리먼트를 id를 이용하여 쉽게 탐색할 수 있다" time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="특정 엘리먼트의 스타일을 확인할 수 있다" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="특정 엘리먼트의 class를 확인할 수 있다." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="특정 엘리먼트의 class를 변경할 수 있다." time="0.007" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="특정 엘리먼트의 class를 추가할 수 있다." time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="특정 엘리먼트의 class를 제거할 수 있다" time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="엘리먼트가 특정 클래스를 가지고 있는지 확인할 수 있다." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="setPosition메서드를 통해 엘리먼트의 position을 지정할 수 있다." time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="getPosition메서드를 통해 엘리먼트의 위치를 계산할 수 있다" time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="getSize() 메서드로 엘리먼트의 크기를 Rect로 받을 수 있다" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="첫번째 인자가 조건에 만족할때는 첫번째 인자를 그냥 반환함." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="selector에 해당하는 부모 엘리먼트가 나올때까지 찾는다" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="selector에 해당하는 부모 엘리먼트가 없으면 undefined를 반환한다" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="렌더링 되지 않은 엘리먼트에 대해서도 동작함" time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="parentNode가 undefined일 경우 반환함." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="dom내부의 모든 텍스트를 태그 없이 볼 수 있다" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="find() 메서드로 문서 내 dom을 id, className, tagName으로 탐색할 수 있다" time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="두 번째 인자가 없으면 document.body부터 찾기 시작한다" time="0.003" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="두 번째 엘리먼트에 root엘리먼트의 id를 넣어도 사용가능하다" time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="엘리먼트가 없을 경우 null 반환" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="세 번째 인자를 설정하지 않으면 조건을 만족하는 첫 번째 엘리먼트만 반환한다." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="세 번째 인자를 true로 설정하면 조건에 맞는 모든 엘리먼트를 반환한다." time="0.009" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="세 번째 인자에 함수를 전달하면 필터로 사용한다." time="0.003" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="setData()" time="0.003" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="getData()" time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="엘리먼트를 생성하여 문서에 바로 추가한다" time="0.003" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="엘리먼트를 특정 엘리먼트의 자식으로 바로 생성할 수 있다" time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="엘리먼트 생성과 동시에 cssClass를 할당할 수 있다" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="폼 엘리먼트 내의 입력값을 객체로 출력한다" time="0.004" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="selectbox 이면서 option 이 하나도 없으면 emptyString" time="0.003" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="disabled인 엘리먼트는 뺌" time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).module:domutil"/>
  <testcase name="emit &quot;click&quot; when not emitted drag event between mousedown and mousedown" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Handler/Drag"/>
  <testcase name="_dragStart fired only once every drag sessions." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Handler/Drag"/>
  <testcase name="makes custom event data from mousedown events" time="0" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Handler/Drag"/>
  <testcase name="return false when implemented dragStart handler then stop drag." time="0" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Handler/Drag"/>
  <testcase name="only primary mouse button can start drag events." time="0.007" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Handler/Drag"/>
  <testcase name="toggle events for drags" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).Handler/Drag"/>
  <testcase name="make an container element on body when container is not supplied." time="0.332" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).View"/>
  <testcase name="setting default container." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).View"/>
  <testcase name="Can add child views." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).View"/>
  <testcase name="Can add some process before added." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).View"/>
  <testcase name="can invoke function each child views recursivly." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).View"/>
  <testcase name="set skipThis true then skip invoke function with root view." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).View"/>
  <testcase name="destroy child views recursivly." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).View"/>
  <testcase name="Can remove child view." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).View"/>
  <testcase name="Can remove child view by instance itself." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).View"/>
  <testcase name="Can execute some process before view removed." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).View"/>
  <testcase name="invoke render method recursivly." time="0.006" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).View"/>
  <testcase name="calculate view's container element bounds." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).View"/>
  <testcase name="can send recursivly to each parent instances." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).View"/>
  <testcase name="send resize message properly." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).View"/>
  <testcase name="render() makes button for each palette colors." time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).view:Palette"/>
  <testcase name="move color slider handle by supplied position." time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).view:Slider"/>
  <testcase name="change colorslider handle stroke color for increase visibility." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).view:Slider"/>
  <testcase name="can silence firing custom events" time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).view:Slider"/>
  <testcase name="move colorslider handle properly by supplied s, v values." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).view:Slider"/>
  <testcase name="move hue handle properly." time="0.002" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).view:Slider"/>
  <testcase name="change colorslider's base gradient color properly." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).view:Slider"/>
  <testcase name="can silence firing custom events." time="0.001" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).view:Slider"/>
  <testcase name="move hue handle by supplied degree." time="0.01" classname="Firefox_43_0_0_(Mac_OS_X_10_11_0).view:Slider"/>
  <system-out>
    <![CDATA[
]]>
  </system-out>
  <system-err/>
</testsuite>